<!DOCTYPE>
<html>
<head>
    <meta charset="UTF-8" http-equiv="Content-Type" content="user-scalable=0" name="viewport" />
    <title>subextra</title>
    <script type="text/javascript">
        // get the height of the window
        function getClientHeight()
        {
            var clientHeight=0;
            if(document.body.clientHeight&&document.documentElement.clientHeight)
            {
                clientHeight = (document.body.clientHeight<document.documentElement.clientHeight)?document.body.clientHeight:document.documentElement.clientHeight;
            }
            else
            {
                clientHeight = (document.body.clientHeight>document.documentElement.clientHeight)?document.body.clientHeight:document.documentElement.clientHeight;
            }
            return clientHeight;
        }
        // get the width of the window
        function getClientWidth() {
            // 通过深入 Document 内部对 body 进行检测，获取窗口大小
            if (document.documentElement && document.documentElement.clientWidth) {
                return document.documentElement.clientWidth;
            }
            if (document.body && document.body.clientWidth) {
                return document.body.clientWidth;
            }
            if (window.innerWidth) {
                return window.innerWidth;
            }
        }
        function heredoc(fn) {
            return fn.toString().split('\n').slice(1, -1).join('\n') + '\n';
        }
        var craw = '';
        var eraw = '';
        var cn = [];
        var en = [];

        function processSSA(p, isChn) {
            var max = p.length - 1;
            var i = 0;

            i = p.indexOf('Dialogue:');
            while(i <= max) {
                var line = '';
                // filter head ending with '0,,'
                while (i <= max) {
                    if (p.slice(i, i + 3) === '0,,') {
                        i = i + 3;
                        break;
                    }
                    if (p.slice(i, i + 10) === '0,!Effect,') {
                        i = i + 10;
                        break;
                    }
                    i++;
                }
                filterBraces(p);
                while (i <= max && p[i] !== '\\' && p[i] !== '{' && p[i] !== '\r') {
                    line += p[i];
                    i++;
                }
                filterBraces(p);
                while (i <= max && p[i] !== '\n') {
                    i++;
                }
                i++;
                if (line) {
                    if (isChn && /[\u4e00-\u9fa5]/.test(line)) {
                        cn.push(line);
                    } else if (!isChn && /[a-zA-Z]/.test(line)) {
                        en.push(line);
                    }
                }
            }

            function filterBraces(p) {
                while (i <= max) {
                    if (p[i] === '\\' && p[i + 1] === 'N') {
                        i = i + 2;
                    } else if (p[i] === '{') {
                        i++;
                        while (p[i] !== '}') {
                            i++;
                        }
                        i++;
                    } else {
                        break;
                    }
                }
            }
        }

        function processSRT(t, isChn) {
            var tmax = t.length - 1;
            var i = 0;

            while(i <= tmax) {
                getBlock(t, isChn);
            }

            // get a line text
            function getLine(p) {
                var str = '';
                while (i <= tmax && (p[i] === '\r' || p[i] === '\n' || p[i] === '\t' || p[i] === ' ')) {
                    i++;
                }
                while (i <= tmax && p[i] !== '\r' && p[i] !== '\n') {
                    str += p[i];
                    i++;
                }
                return str;
            }

            // get a block
            function getBlock(p, isChn) {
                // the 1st line is number
                getLine(p);
                // the 2nd line is time stamp
                getLine(p);
                var sentence = '';
                var line = '';
                // subtitle begins
                do {
                    line = getLine(p);
                    if ((isChn && /[\u4e00-\u9fa5]/.test(line)) || (!isChn && /[a-zA-Z]/.test(line))) {
                        if (sentence !== '') {
                            sentence += ' - ';
                        }
                        sentence += line;
                    }
                    // p[i], p[i + 1] === \r\n && p[i + 2], p[i + 3] === \r\n
                    // means the end of a block
                } while (i < tmax && p[i + 2] !== '\r' && p[i + 2] !== '\n');
                // drop this block when english or chinese is missing
                if (sentence) {
                    if (isChn) {
                        cn.push(sentence);
                    } else {
                        en.push(sentence);
                    }
                }
            }
        }
        function processTxt(c, e) {
            if (c.indexOf('[Script Info]') !== -1) {
                // ass subtitle
                processSSA(c, true);
            } else {
                // srt subtitle
                processSRT(c, true);
            }

            if (e.indexOf('[Script Info]') !== -1) {
                // ass subtitle
                processSSA(e);
            } else {
                // srt subtitle
                processSRT(e);
            }
        }

        var cntxt;
        var entxt;
        var cnIdx;
        var enIdx;
        var cnMax;
        var enMax;
        var ratio;
        var eratio;
        var wholeWidth;
        var posBtn;

        window.onload = function() {
            cntxt = document.getElementById('cntxt');
            entxt = document.getElementById('entxt');
            ratio = document.getElementById('ratio');
            eratio = document.getElementById('eratio');
            posBtn = document.getElementById('pos');
            var lh = getClientHeight() * 0.9 / 16;
            var fontSize = lh * 0.6 + 'px';
            var lineHeight = lh + 'px';
            cntxt.style.lineHeight = lineHeight;
            cntxt.style.fontSize = fontSize;
            entxt.style.lineHeight = lineHeight;
            entxt.style.fontSize = fontSize;
            ratio.style.fontSize = fontSize;
            ratio.style.height = lh * 2 + 'px';
            ratio.style.lineHeight = lineHeight;
            eratio.style.fontSize = fontSize;
            eratio.style.height = lh + 'px';
            eratio.style.lineHeight = lineHeight;
            wholeWidth = getClientWidth() * 0.85;

            // read subtitle
            eraw = heredoc(textEn);
            craw = heredoc(textCn);
            // store english and chinese subs separately

            processTxt(craw, eraw);

            cnMax = cn.length - 1;
            enMax = en.length - 1;

            cnIdx = Number(localStorage.getItem('cnidx1'));
            enIdx = Number(localStorage.getItem('enidx1'));
            var lastCnMax = Number(localStorage.getItem('cnmax1'));
            var lastEnMax = Number(localStorage.getItem('enmax1'));
            if (cnIdx > cnMax || cnMax !== lastCnMax) {
                localStorage.setItem('cnidx1', 0);
                localStorage.setItem('cnmax1', cnMax);
                cnIdx = 0;
            }
            if (enIdx > enMax || enMax !== lastEnMax) {
                localStorage.setItem('enidx1', 0);
                localStorage.setItem('enmax1', enMax);
                enIdx = 0;
            }
            ratio.innerHTML = 'Chi: ' + cnIdx + ' out of ' + cnMax;
            eratio.innerHTML = 'Eng: ' + enIdx + ' out of ' + enMax;
            setBtnPos();
            cntxt.innerHTML = cn[cnIdx];
            entxt.innerHTML = en[enIdx];

            cntxt.addEventListener('touchstart', cntouchstart);
            cntxt.addEventListener('touchend', cntouchend);
            cntxt.addEventListener('touchmove', cntouchmove);
            entxt.addEventListener('touchstart', entouchstart);
            entxt.addEventListener('touchend', entouchend);
            entxt.addEventListener('touchmove', entouchmove);

            posBtn.addEventListener('touchstart', btnTouchstart);
            posBtn.addEventListener('touchend', btnTouchend);
            posBtn.addEventListener('touchmove', btnTouchmove);

            posBtn.addEventListener('mousedown', mousedown);
            /*IE、Opera注册事件*/
            if(cntxt.attachEvent){
                cntxt.attachEvent('onmousewheel',scrollCnFunc);
         
            }
            //Firefox使用addEventListener添加滚轮事件  
            if (cntxt.addEventListener) {//firefox
                cntxt.addEventListener('DOMMouseScroll', scrollCnFunc, false);
            }  
            //Safari与Chrome属于同一类型
            cntxt.onmousewheel = cntxt.onmousewheel = scrollCnFunc;
            if(cntxt.attachEvent){
                cntxt.attachEvent('onmousewheel',scrollEnFunc);
         
            }
            //Firefox使用addEventListener添加滚轮事件  
            if (entxt.addEventListener) {//firefox
                entxt.addEventListener('DOMMouseScroll', scrollEnFunc, false);
            }  
            //Safari与Chrome属于同一类型
            entxt.onmousewheel = entxt.onmousewheel = scrollEnFunc;
            document.addEventListener('keydown', keydown);
        }
        var cnstartX;
        var cnstartY;
        var hasCMove = false;
        var enstartX;
        var enstartY;
        var hasEMove = false;
        function cntouchstart(event) {
            cnstartX = event.changedTouches[0].pageX;
            cnstartY = event.changedTouches[0].pageY;
        }
        function cntouchend(event) {
            if (hasCMove) {
                hasCMove = false;
                if (event.changedTouches[0].pageX - cnstartX > 0) {
                    cnext();
                } else if (event.changedTouches[0].pageX - cnstartX < 0) {
                    cprev();
                }
            }
        }
        function cntouchmove(event) {
            event.preventDefault();
            var spanX = event.changedTouches[0].pageX - cnstartX;
            var spanY = event.changedTouches[0].pageY - cnstartY;
            if (Math.abs(spanX) > Math.abs(spanY)) {      //认定为水平方向滑动
                if (!hasCMove) {
                    hasCMove = true;
                }
            }
            // else { //认定为垂直方向滑动
            //     if (spanY > 0) {
            //         //向下
            //     } else if (spanY < 0) {
            //         //向上
            //     }
            // }
        }
        function entouchstart(event) {
            enstartX = event.changedTouches[0].pageX;
            enstartY = event.changedTouches[0].pageY;
        }
        function entouchend(event) {
            if (hasEMove) {
                hasEMove = false;
                if (event.changedTouches[0].pageX - enstartX > 0) {
                    enext();
                } else if (event.changedTouches[0].pageX - enstartX < 0) {
                    eprev();
                }
            }
        }
        function entouchmove(event) {
            event.preventDefault();
            var spanX = event.changedTouches[0].pageX - enstartX;
            var spanY = event.changedTouches[0].pageY - enstartY;
            if (Math.abs(spanX) > Math.abs(spanY)) {      //认定为水平方向滑动
                if (!hasEMove) {
                    hasEMove = true;
                }
            }
        }

        function scrollCnFunc(e) {
            e = e || window.event;
            if (e.wheelDelta) {  //判断浏览器IE，谷歌滑轮事件
                if (e.wheelDelta > 0) {
                    cprev();
                } else {
                    cnext();
                }
            } else if (e.detail) {  //Firefox滑轮事件
                if (e.detail < 0) {
                    cprev();
                } else {
                    cnext();
                }
            }
        }
        function scrollEnFunc(e) {
            e = e || window.event;
            if (e.wheelDelta) {  //判断浏览器IE，谷歌滑轮事件
                if (e.wheelDelta > 0) {
                    eprev();
                } else {
                    enext();
                }
            } else if (e.detail) {  //Firefox滑轮事件
                if (e.detail < 0) {
                    eprev();
                } else {
                    enext();
                }
            }
        }
        /*
            event.wheelDelta 滚动方向
            上：120
            下：-120
            Firefox：event.detail 滚动方向
            上：-3
            下:3
            */
        function keydown(e) {
            if (e && e.keyCode === 37) { // left
                cprev();
            } else if (e && e.keyCode === 39){ // right
                cnext();
            } else if (e && e.keyCode === 38){ // up
                eprev();
            } else if (e && e.keyCode === 40){ // down
                enext();
            }
        }
        function cprev() {
           if (cnIdx > 0) {
               cnIdx--;
               localStorage.setItem('cnidx1', cnIdx);
               ratio.innerHTML = 'Chi: ' + cnIdx + ' out of ' + cnMax;
               cntxt.innerHTML = cn[cnIdx];
               setBtnPos();
            }
        }
        function cnext() {
            if (cnIdx < cnMax) {
                cnIdx++;
                localStorage.setItem('cnidx1', cnIdx);
                ratio.innerHTML = 'Chi: ' + cnIdx + ' out of ' + cnMax;
                cntxt.innerHTML = cn[cnIdx];
                setBtnPos();
            }
        }
        function eprev() {
            if (enIdx > 0) {
                enIdx--;
                localStorage.setItem('enidx1', enIdx);
                eratio.innerHTML = 'Eng: ' + enIdx + ' out of ' + enMax;
                entxt.innerHTML = en[enIdx];
            }
        }
        function enext() {
            if (enIdx < enMax) {
                enIdx++;
                localStorage.setItem('enidx1', enIdx);
                eratio.innerHTML = 'Eng: ' + enIdx + ' out of ' + enMax;
                entxt.innerHTML = en[enIdx];
            }
        }
        function setIdx() {
            cnIdx = Math.round(Number(posBtn.style.left.replace('px', '')) / wholeWidth * cnMax);
            localStorage.setItem('cnidx1', cnIdx);
            var tmp = cnIdx > enMax ? enMax : cnIdx;
            enIdx = tmp;
            localStorage.setItem('enidx1', tmp);
            ratio.innerHTML = 'Chi: ' + cnIdx + ' out of ' + cnMax;
            eratio.innerHTML = 'Eng: ' + tmp + ' out of ' + enMax;
            cntxt.innerHTML = cn[cnIdx];
            entxt.innerHTML = en[tmp];
        }
        function setBtnPos() {
            posBtn.style.left = wholeWidth * cnIdx / cnMax + 'px';
        }
        var btnstartX;
        var btnstartY;
        var startLeft;

        function btnTouchstart(event) {
            btnstartX = event.changedTouches[0].pageX;
            btnstartY = event.changedTouches[0].pageY;
            startLeft = Number(posBtn.style.left.replace('px', ''));
        }
        function btnTouchend(event) {
        }
        function btnTouchmove(event) {
            event.preventDefault();
            var spanX = event.changedTouches[0].pageX - btnstartX;
            var spanY = event.changedTouches[0].pageY - btnstartY;
            if (Math.abs(spanX) > Math.abs(spanY)) {      //认定为水平方向滑动
                var end = startLeft + spanX;
                if (end < 0) {
                    posBtn.style.left = 0;
                    setIdx();
                } else if (end > wholeWidth) {
                    posBtn.style.left = wholeWidth;
                    setIdx();
                } else {
                    posBtn.style.left = end;
                    setIdx();
                }
            }
        }
        var mouseStartX;
        var mouseLeft;
        function mousedown(event) {
            mouseStartX = event.pageX;
            mouseLeft = Number(posBtn.style.left.replace('px', ''));
            document.addEventListener('mousemove', mousemove);
            document.addEventListener('mouseup', mouseup);
        }
        function mousemove(event) {
            var spanX = event.pageX - mouseStartX;
            var end = mouseLeft + spanX;
            if (end < 0) {
                posBtn.style.left = 0;
                setIdx();
            } else if (end > wholeWidth) {
                posBtn.style.left = wholeWidth;
                setIdx();
            } else {
                posBtn.style.left = end;
                setIdx();
            }
        }
        function mouseup(event) {
            document.removeEventListener('mousemove', mousemove);
            document.removeEventListener('mouseup', mouseup);
        }
    </script>
    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            width: 100%;
            box-sizing: border-box;
        }
        .content{
            position: relative;
            box-sizing: border-box;
            width: 100%;
            height: 94%;
            font-weight: bold;
        }
        .cn{
            border-bottom: 5px solid #fff;
        }
        #cntxt, #entxt{
            box-sizing: border-box;
            background-color: #209E85;
            overflow: hidden;
            height: 50%;
            padding-left: 3%;
            padding-right: 3%;
        }
        .en {
            position: relative;
            z-index: 2;
        }
        .control {
            position: relative;
            box-sizing: border-box;
            width: 100%;
            height: 6%;
            background: #FAFAFA;
            box-shadow: inset 0 1px 1px #f0f0f0;
        }
        .btn {
            width: 15%;
            height: 100%;
        }
        .btn.search {
            position: absolute;
            z-index: 1;
            border: 5px solid #D9D9D9;
            border-radius: 15%;
            background: #FFF;
            cursor: default;
            box-shadow: inset 0 0 5px #FFF, inset 0 5px 10px #EBEBEB, 0 10px 20px -15px #BBB;
            outline: none;
            cursor: pointer;
        }
        .search:before, .search:after {
            content: "";
            display: block;
            position: absolute;
            height: 70%;
            width: 2%;
            background: #E8E7E6;
            left: 40%;
            top: 15%;
        }
        .search:after {
            left: 60%;
        }
        .ratio {
            position: absolute;
            color: rgba(255, 255, 255, 0.3);
            top: 0;
            bottom: 0;
            left: 0;
            margin: auto;
        }
        .eratio {
            position: absolute;
            z-index: 2;
            color: rgba(255, 255, 255, 0.3);
            bottom: 0;
            left: 0;
            margin: auto;
        }
    </style>
</head>
<body>
    <div class="control">
        <button type="button" class="btn search" id="pos"></button>
    </div>
    <div class="content" id="content">
        <div id="cntxt" class="cn"></div>
        <div id="entxt" class="en"></div>
        <div id="ratio" class="ratio"></div>
        <div id="eratio" class="eratio"></div>
    </div>

    <script type="text/javascript" src="csub.js"></script>
    <script type="text/javascript" src="esub.js"></script>
</body>
</html>